# JMH 1.11.2 (released 73 days ago)
# VM version: JDK 1.8.0_45, VM 25.45-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.blu.collection.jmh.CollectionBenchMarking.testArrayListofIntegerJDK8

# Run progress: 0.00% complete, ETA 00:01:48
# Fork: 1 of 3
# Warmup Iteration   1: 14192.996 ops/s
# Warmup Iteration   2: 15779.524 ops/s
# Warmup Iteration   3: 20116.039 ops/s
Iteration   1: 19621.677 ops/s
Iteration   2: 19476.870 ops/s
Iteration   3: 19354.560 ops/s

# Run progress: 5.56% complete, ETA 00:01:47
# Fork: 2 of 3
# Warmup Iteration   1: 14415.845 ops/s
# Warmup Iteration   2: 20267.421 ops/s
# Warmup Iteration   3: 21146.653 ops/s
Iteration   1: 21509.008 ops/s
Iteration   2: 20739.325 ops/s
Iteration   3: 20485.432 ops/s

# Run progress: 11.11% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 14834.304 ops/s
# Warmup Iteration   2: 20017.559 ops/s
# Warmup Iteration   3: 21097.844 ops/s
Iteration   1: 21496.708 ops/s
Iteration   2: 20880.110 ops/s
Iteration   3: 20776.837 ops/s


Result "testArrayListofIntegerJDK8":
  20482.281 ±(99.9%) 1382.865 ops/s [Average]
  (min, avg, max) = (19354.560, 20482.281, 21509.008), stdev = 822.921
  CI (99.9%): [19099.416, 21865.146] (assumes normal distribution)


# JMH 1.11.2 (released 73 days ago)
# VM version: JDK 1.8.0_45, VM 25.45-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.blu.collection.jmh.CollectionBenchMarking.testPrimitiveArrayListFastUtils

# Run progress: 16.67% complete, ETA 00:01:34
# Fork: 1 of 3
# Warmup Iteration   1: 69281.823 ops/s
# Warmup Iteration   2: 87734.693 ops/s
# Warmup Iteration   3: 102524.596 ops/s
Iteration   1: 97708.820 ops/s
Iteration   2: 101493.122 ops/s
Iteration   3: 97990.631 ops/s

# Run progress: 22.22% complete, ETA 00:01:28
# Fork: 2 of 3
# Warmup Iteration   1: 69886.441 ops/s
# Warmup Iteration   2: 91404.222 ops/s
# Warmup Iteration   3: 100603.850 ops/s
Iteration   1: 102235.794 ops/s
Iteration   2: 99394.937 ops/s
Iteration   3: 104179.910 ops/s

# Run progress: 27.78% complete, ETA 00:01:22
# Fork: 3 of 3
# Warmup Iteration   1: 71690.285 ops/s
# Warmup Iteration   2: 98420.985 ops/s
# Warmup Iteration   3: 100340.207 ops/s
Iteration   1: 102644.827 ops/s
Iteration   2: 99366.966 ops/s
Iteration   3: 107308.195 ops/s


Result "testPrimitiveArrayListFastUtils":
  101369.245 ±(99.9%) 5256.738 ops/s [Average]
  (min, avg, max) = (97708.820, 101369.245, 107308.195), stdev = 3128.200
  CI (99.9%): [96112.507, 106625.982] (assumes normal distribution)


# JMH 1.11.2 (released 73 days ago)
# VM version: JDK 1.8.0_45, VM 25.45-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.blu.collection.jmh.CollectionBenchMarking.testPrimitiveArrayListHppc

# Run progress: 33.33% complete, ETA 00:01:15
# Fork: 1 of 3
# Warmup Iteration   1: 15425.872 ops/s
# Warmup Iteration   2: 16515.652 ops/s
# Warmup Iteration   3: 16239.464 ops/s
Iteration   1: 17167.794 ops/s
Iteration   2: 16824.387 ops/s
Iteration   3: 16244.297 ops/s

# Run progress: 38.89% complete, ETA 00:01:09
# Fork: 2 of 3
# Warmup Iteration   1: 15252.284 ops/s
# Warmup Iteration   2: 16862.610 ops/s
# Warmup Iteration   3: 16813.355 ops/s
Iteration   1: 16372.306 ops/s
Iteration   2: 17224.361 ops/s
Iteration   3: 15668.880 ops/s

# Run progress: 44.44% complete, ETA 00:01:03
# Fork: 3 of 3
# Warmup Iteration   1: 15304.693 ops/s
# Warmup Iteration   2: 16899.189 ops/s
# Warmup Iteration   3: 16554.560 ops/s
Iteration   1: 16161.365 ops/s
Iteration   2: 16421.168 ops/s
Iteration   3: 16590.882 ops/s


Result "testPrimitiveArrayListHppc":
  16519.493 ±(99.9%) 834.750 ops/s [Average]
  (min, avg, max) = (15668.880, 16519.493, 17224.361), stdev = 496.746
  CI (99.9%): [15684.744, 17354.243] (assumes normal distribution)


# JMH 1.11.2 (released 73 days ago)
# VM version: JDK 1.8.0_45, VM 25.45-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.blu.collection.jmh.MyBenchmark.testJDK8ArrayList

# Run progress: 50.00% complete, ETA 00:00:56
# Fork: 1 of 3
# Warmup Iteration   1: 14084.260 ops/s
# Warmup Iteration   2: 13831.478 ops/s
# Warmup Iteration   3: 19785.347 ops/s
Iteration   1: 20388.004 ops/s
Iteration   2: 20119.149 ops/s
Iteration   3: 20606.663 ops/s

# Run progress: 55.56% complete, ETA 00:00:50
# Fork: 2 of 3
# Warmup Iteration   1: 14517.631 ops/s
# Warmup Iteration   2: 15674.768 ops/s
# Warmup Iteration   3: 21278.821 ops/s
Iteration   1: 20701.146 ops/s
Iteration   2: 20691.338 ops/s
Iteration   3: 20800.075 ops/s

# Run progress: 61.11% complete, ETA 00:00:44
# Fork: 3 of 3
# Warmup Iteration   1: 14441.115 ops/s
# Warmup Iteration   2: 14192.895 ops/s
# Warmup Iteration   3: 19387.941 ops/s
Iteration   1: 19864.781 ops/s
Iteration   2: 20143.037 ops/s
Iteration   3: 19988.824 ops/s


Result "testJDK8ArrayList":
  20367.002 ±(99.9%) 584.876 ops/s [Average]
  (min, avg, max) = (19864.781, 20367.002, 20800.075), stdev = 348.050
  CI (99.9%): [19782.126, 20951.878] (assumes normal distribution)


# JMH 1.11.2 (released 73 days ago)
# VM version: JDK 1.8.0_45, VM 25.45-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.blu.collection.jmh.MyBenchmark.testPrimitiveArrayList

# Run progress: 66.67% complete, ETA 00:00:38
# Fork: 1 of 3
# Warmup Iteration   1: 68707.500 ops/s
# Warmup Iteration   2: 70876.903 ops/s
# Warmup Iteration   3: 104929.400 ops/s
Iteration   1: 110462.894 ops/s
Iteration   2: 109585.279 ops/s
Iteration   3: 109475.897 ops/s

# Run progress: 72.22% complete, ETA 00:00:31
# Fork: 2 of 3
# Warmup Iteration   1: 67879.541 ops/s
# Warmup Iteration   2: 72163.009 ops/s
# Warmup Iteration   3: 102384.006 ops/s
Iteration   1: 99374.094 ops/s
Iteration   2: 102462.444 ops/s
Iteration   3: 102196.892 ops/s

# Run progress: 77.78% complete, ETA 00:00:25
# Fork: 3 of 3
# Warmup Iteration   1: 71582.896 ops/s
# Warmup Iteration   2: 77440.424 ops/s
# Warmup Iteration   3: 105163.338 ops/s
Iteration   1: 106282.388 ops/s
Iteration   2: 99786.449 ops/s
Iteration   3: 101104.508 ops/s


Result "testPrimitiveArrayList":
  104525.649 ±(99.9%) 7487.477 ops/s [Average]
  (min, avg, max) = (99374.094, 104525.649, 110462.894), stdev = 4455.677
  CI (99.9%): [97038.173, 112013.126] (assumes normal distribution)


# JMH 1.11.2 (released 73 days ago)
# VM version: JDK 1.8.0_45, VM 25.45-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home/jre/bin/java
# VM options: <none>
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.blu.collection.jmh.MyBenchmark.testPrimitiveArrayListHppc

# Run progress: 83.33% complete, ETA 00:00:19
# Fork: 1 of 3
# Warmup Iteration   1: 15180.459 ops/s
# Warmup Iteration   2: 15316.946 ops/s
# Warmup Iteration   3: 15028.975 ops/s
Iteration   1: 15702.967 ops/s
Iteration   2: 16177.678 ops/s
Iteration   3: 16186.738 ops/s

# Run progress: 88.89% complete, ETA 00:00:12
# Fork: 2 of 3
# Warmup Iteration   1: 14791.469 ops/s
# Warmup Iteration   2: 16854.415 ops/s
# Warmup Iteration   3: 16262.526 ops/s
Iteration   1: 16347.551 ops/s
Iteration   2: 16421.852 ops/s
Iteration   3: 17240.590 ops/s

# Run progress: 94.44% complete, ETA 00:00:06
# Fork: 3 of 3
# Warmup Iteration   1: 14862.378 ops/s
# Warmup Iteration   2: 16016.355 ops/s
# Warmup Iteration   3: 16560.122 ops/s
Iteration   1: 16386.661 ops/s
Iteration   2: 17681.391 ops/s
Iteration   3: 18078.515 ops/s


Result "testPrimitiveArrayListHppc":
  16691.549 ±(99.9%) 1326.524 ops/s [Average]
  (min, avg, max) = (15702.967, 16691.549, 18078.515), stdev = 789.393
  CI (99.9%): [15365.026, 18018.073] (assumes normal distribution)


# Run complete. Total time: 00:01:54

Benchmark                                                Mode  Cnt       Score      Error  Units
CollectionBenchMarking.testArrayListofIntegerJDK8       thrpt    9   20482.281 ± 1382.865  ops/s
CollectionBenchMarking.testPrimitiveArrayListFastUtils  thrpt    9  101369.245 ± 5256.738  ops/s
CollectionBenchMarking.testPrimitiveArrayListHppc       thrpt    9   16519.493 ±  834.750  ops/s
MyBenchmark.testJDK8ArrayList                           thrpt    9   20367.002 ±  584.876  ops/s
MyBenchmark.testPrimitiveArrayList                      thrpt    9  104525.649 ± 7487.477  ops/s
MyBenchmark.testPrimitiveArrayListHppc                  thrpt    9   16691.549 ± 1326.524  ops/s
